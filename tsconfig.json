{
  "compilerOptions": {
    // 转换成的目标代码
    "target": "esnext",
    // 目标代码需要使用的模块化方案
    "module": "esnext",
    // 严格模式的检查 不许使用any
    "strict": true,
    // 对jsx进行怎样的处理
    "jsx": "preserve",
    // 按照node的方式去解析模块  查找index.js ts
    "moduleResolution": "node",
    // 跳过一些库类型检测
    // 导入时才检测
    "skipLibCheck": true,
    // es module和commonjs混合使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    // 是否生成映射文件
    "sourceMap": true,
    // 文件路径在解析时 基本Url
    "baseUrl": ".",
    //指定具体要解析使用的类型
    "types": ["webpack-env"],
    // 路径解析
    "paths": {
      "@/*": ["src/*"]
    },
    // 可以指定在项目中可以使用哪里库的类型 window Document
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  // 当前我们那些代码需要编译解析的
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  // 排除不需要解析的
  "exclude": ["node_modules"]
}
