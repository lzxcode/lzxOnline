{
  "version": 3,
  "sources": ["browser-external:module", "../../../node_modules/@iconify/utils/lib/loader/fs.mjs", "../../../node_modules/local-pkg/index.mjs", "../../../node_modules/local-pkg/dist/shared.mjs", "../../../node_modules/@antfu/install-pkg/dist/index.mjs", "../../../node_modules/@antfu/utils/dist/index.mjs", "../../../node_modules/@iconify/utils/lib/loader/install-pkg.mjs", "../../../node_modules/@iconify/utils/lib/loader/warn.mjs", "../../../node_modules/@iconify/utils/lib/loader/node-loader.mjs"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"module\" has been externalized for browser compatibility. Cannot access \"module.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import { promises } from 'fs';\nimport { isPackageExists, resolveModule } from 'local-pkg';\nimport { tryInstallPkg } from './install-pkg.mjs';\nimport '@antfu/install-pkg';\nimport '@antfu/utils';\nimport 'kolorist';\nimport './warn.mjs';\n\nconst _collections = {};\nconst isLegacyExists = isPackageExists(\"@iconify/json\");\nasync function loadCollectionFromFS(name, autoInstall = false) {\n  if (!await _collections[name]) {\n    _collections[name] = task();\n  }\n  return _collections[name];\n  async function task() {\n    let jsonPath = resolveModule(`@iconify-json/${name}/icons.json`);\n    if (!jsonPath && isLegacyExists) {\n      jsonPath = resolveModule(`@iconify/json/json/${name}.json`);\n    }\n    if (!jsonPath && !isLegacyExists && autoInstall) {\n      await tryInstallPkg(`@iconify-json/${name}`);\n      jsonPath = resolveModule(`@iconify-json/${name}/icons.json`);\n    }\n    let stat;\n    try {\n      stat = jsonPath ? await promises.lstat(jsonPath) : void 0;\n    } catch (err) {\n      return void 0;\n    }\n    if (stat && stat.isFile()) {\n      return JSON.parse(await promises.readFile(jsonPath, \"utf8\"));\n    } else {\n      return void 0;\n    }\n  }\n}\n\nexport { loadCollectionFromFS };\n", "import { dirname, join } from 'path'\nimport { existsSync, promises as fs, readFileSync } from 'fs'\nimport { createRequire } from 'module'\n\nexport { loadPackageJSON, isPackageListed } from './dist/shared.mjs'\n\nconst _require = createRequire(import.meta.url)\n\nexport function resolveModule(name, options) {\n  try {\n    return _require.resolve(name, options)\n  }\n  catch (e) {\n    return undefined\n  }\n}\n\nexport function importModule(path) {\n  return import(path).then((i) => {\n    if (i && i.default && i.default.__esModule)\n      return i.default\n    return i\n  })\n}\n\nexport function isPackageExists(name, options) {\n  return !!resolvePackage(name, options)\n}\n\nfunction getPackageJsonPath(name, options) {\n  const entry = resolvePackage(name, options)\n  if (!entry)\n    return\n\n  return searchPackageJSON(entry)\n}\n\nexport async function getPackageInfo(name, options) {\n  const packageJsonPath = getPackageJsonPath(name, options)\n  if (!packageJsonPath)\n    return\n\n  const pkg = JSON.parse(await fs.readFile(packageJsonPath, 'utf8'))\n\n  return {\n    name,\n    version: pkg.version,\n    rootPath: dirname(packageJsonPath),\n    packageJsonPath,\n    packageJson: pkg,\n  }\n}\n\nexport function getPackageInfoSync(name, options) {\n  const packageJsonPath = getPackageJsonPath(name, options)\n  if (!packageJsonPath)\n    return\n\n  const pkg = JSON.parse(readFileSync(packageJsonPath, 'utf8'))\n\n  return {\n    name,\n    version: pkg.version,\n    rootPath: dirname(packageJsonPath),\n    packageJsonPath,\n    packageJson: pkg,\n  }\n}\n\nfunction resolvePackage(name, options = {}) {\n  try {\n    return _require.resolve(`${name}/package.json`, options)\n  }\n  catch {\n  }\n  try {\n    return _require.resolve(name, options)\n  }\n  catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND')\n      console.error(e)\n    return false\n  }\n}\n\nfunction searchPackageJSON(dir) {\n  let packageJsonPath\n  while (true) {\n    if (!dir)\n      return\n    const newDir = dirname(dir)\n    if (newDir === dir)\n      return\n    dir = newDir\n    packageJsonPath = join(dir, 'package.json')\n    if (existsSync(packageJsonPath))\n      break\n  }\n\n  return packageJsonPath\n}\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\n\n// shared.ts\nimport { existsSync, promises as fs2 } from \"fs\";\n\n// node_modules/.pnpm/find-up@6.3.0/node_modules/find-up/index.js\nimport path2 from \"path\";\nimport { fileURLToPath as fileURLToPath2 } from \"url\";\n\n// node_modules/.pnpm/locate-path@7.1.1/node_modules/locate-path/index.js\nimport process2 from \"process\";\nimport path from \"path\";\nimport fs, { promises as fsPromises } from \"fs\";\nimport { fileURLToPath } from \"url\";\n\n// node_modules/.pnpm/yocto-queue@1.0.0/node_modules/yocto-queue/index.js\nvar Node = class {\n  constructor(value) {\n    __publicField(this, \"value\");\n    __publicField(this, \"next\");\n    this.value = value;\n  }\n};\nvar _head, _tail, _size;\nvar Queue = class {\n  constructor() {\n    __privateAdd(this, _head, void 0);\n    __privateAdd(this, _tail, void 0);\n    __privateAdd(this, _size, void 0);\n    this.clear();\n  }\n  enqueue(value) {\n    const node = new Node(value);\n    if (__privateGet(this, _head)) {\n      __privateGet(this, _tail).next = node;\n      __privateSet(this, _tail, node);\n    } else {\n      __privateSet(this, _head, node);\n      __privateSet(this, _tail, node);\n    }\n    __privateWrapper(this, _size)._++;\n  }\n  dequeue() {\n    const current = __privateGet(this, _head);\n    if (!current) {\n      return;\n    }\n    __privateSet(this, _head, __privateGet(this, _head).next);\n    __privateWrapper(this, _size)._--;\n    return current.value;\n  }\n  clear() {\n    __privateSet(this, _head, void 0);\n    __privateSet(this, _tail, void 0);\n    __privateSet(this, _size, 0);\n  }\n  get size() {\n    return __privateGet(this, _size);\n  }\n  *[Symbol.iterator]() {\n    let current = __privateGet(this, _head);\n    while (current) {\n      yield current.value;\n      current = current.next;\n    }\n  }\n};\n_head = new WeakMap();\n_tail = new WeakMap();\n_size = new WeakMap();\n\n// node_modules/.pnpm/p-limit@4.0.0/node_modules/p-limit/index.js\nfunction pLimit(concurrency) {\n  if (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n    throw new TypeError(\"Expected `concurrency` to be a number from 1 and up\");\n  }\n  const queue = new Queue();\n  let activeCount = 0;\n  const next = () => {\n    activeCount--;\n    if (queue.size > 0) {\n      queue.dequeue()();\n    }\n  };\n  const run = async (fn, resolve, args) => {\n    activeCount++;\n    const result = (async () => fn(...args))();\n    resolve(result);\n    try {\n      await result;\n    } catch (e) {\n    }\n    next();\n  };\n  const enqueue = (fn, resolve, args) => {\n    queue.enqueue(run.bind(void 0, fn, resolve, args));\n    (async () => {\n      await Promise.resolve();\n      if (activeCount < concurrency && queue.size > 0) {\n        queue.dequeue()();\n      }\n    })();\n  };\n  const generator = (fn, ...args) => new Promise((resolve) => {\n    enqueue(fn, resolve, args);\n  });\n  Object.defineProperties(generator, {\n    activeCount: {\n      get: () => activeCount\n    },\n    pendingCount: {\n      get: () => queue.size\n    },\n    clearQueue: {\n      value: () => {\n        queue.clear();\n      }\n    }\n  });\n  return generator;\n}\n\n// node_modules/.pnpm/p-locate@6.0.0/node_modules/p-locate/index.js\nvar EndError = class extends Error {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n};\nvar testElement = async (element, tester) => tester(await element);\nvar finder = async (element) => {\n  const values = await Promise.all(element);\n  if (values[1] === true) {\n    throw new EndError(values[0]);\n  }\n  return false;\n};\nasync function pLocate(iterable, tester, {\n  concurrency = Number.POSITIVE_INFINITY,\n  preserveOrder = true\n} = {}) {\n  const limit = pLimit(concurrency);\n  const items = [...iterable].map((element) => [element, limit(testElement, element, tester)]);\n  const checkLimit = pLimit(preserveOrder ? 1 : Number.POSITIVE_INFINITY);\n  try {\n    await Promise.all(items.map((element) => checkLimit(finder, element)));\n  } catch (error) {\n    if (error instanceof EndError) {\n      return error.value;\n    }\n    throw error;\n  }\n}\n\n// node_modules/.pnpm/locate-path@7.1.1/node_modules/locate-path/index.js\nvar typeMappings = {\n  directory: \"isDirectory\",\n  file: \"isFile\"\n};\nfunction checkType(type) {\n  if (Object.hasOwnProperty.call(typeMappings, type)) {\n    return;\n  }\n  throw new Error(`Invalid type specified: ${type}`);\n}\nvar matchType = (type, stat) => stat[typeMappings[type]]();\nvar toPath = (urlOrPath) => urlOrPath instanceof URL ? fileURLToPath(urlOrPath) : urlOrPath;\nasync function locatePath(paths, {\n  cwd = process2.cwd(),\n  type = \"file\",\n  allowSymlinks = true,\n  concurrency,\n  preserveOrder\n} = {}) {\n  checkType(type);\n  cwd = toPath(cwd);\n  const statFunction = allowSymlinks ? fsPromises.stat : fsPromises.lstat;\n  return pLocate(paths, async (path_) => {\n    try {\n      const stat = await statFunction(path.resolve(cwd, path_));\n      return matchType(type, stat);\n    } catch (e) {\n      return false;\n    }\n  }, { concurrency, preserveOrder });\n}\n\n// node_modules/.pnpm/find-up@6.3.0/node_modules/find-up/index.js\nvar toPath2 = (urlOrPath) => urlOrPath instanceof URL ? fileURLToPath2(urlOrPath) : urlOrPath;\nvar findUpStop = Symbol(\"findUpStop\");\nasync function findUpMultiple(name, options = {}) {\n  let directory = path2.resolve(toPath2(options.cwd) || \"\");\n  const { root } = path2.parse(directory);\n  const stopAt = path2.resolve(directory, options.stopAt || root);\n  const limit = options.limit || Number.POSITIVE_INFINITY;\n  const paths = [name].flat();\n  const runMatcher = async (locateOptions) => {\n    if (typeof name !== \"function\") {\n      return locatePath(paths, locateOptions);\n    }\n    const foundPath = await name(locateOptions.cwd);\n    if (typeof foundPath === \"string\") {\n      return locatePath([foundPath], locateOptions);\n    }\n    return foundPath;\n  };\n  const matches = [];\n  while (true) {\n    const foundPath = await runMatcher(__spreadProps(__spreadValues({}, options), { cwd: directory }));\n    if (foundPath === findUpStop) {\n      break;\n    }\n    if (foundPath) {\n      matches.push(path2.resolve(directory, foundPath));\n    }\n    if (directory === stopAt || matches.length >= limit) {\n      break;\n    }\n    directory = path2.dirname(directory);\n  }\n  return matches;\n}\nasync function findUp(name, options = {}) {\n  const matches = await findUpMultiple(name, __spreadProps(__spreadValues({}, options), { limit: 1 }));\n  return matches[0];\n}\n\n// shared.ts\nasync function loadPackageJSON(cwd = process.cwd()) {\n  const path3 = await findUp(\"package.json\", { cwd });\n  if (!path3 || !existsSync(path3))\n    return null;\n  return JSON.parse(await fs2.readFile(path3, \"utf-8\"));\n}\nasync function isPackageListed(name, cwd) {\n  const pkg = await loadPackageJSON(cwd) || {};\n  return name in (pkg.dependencies || {}) || name in (pkg.devDependencies || {});\n}\nexport {\n  isPackageListed,\n  loadPackageJSON\n};\n", "// src/detect.ts\nimport fs from \"fs\";\nimport path from \"path\";\nimport findUp from \"find-up\";\nvar AGENTS = [\"pnpm\", \"yarn\", \"npm\", \"pnpm@6\", \"yarn@berry\", \"bun\"];\nvar LOCKS = {\n  \"bun.lockb\": \"bun\",\n  \"pnpm-lock.yaml\": \"pnpm\",\n  \"yarn.lock\": \"yarn\",\n  \"package-lock.json\": \"npm\",\n  \"npm-shrinkwrap.json\": \"npm\"\n};\nasync function detectPackageManager(cwd = process.cwd()) {\n  let agent = null;\n  const lockPath = await findUp(Object.keys(LOCKS), { cwd });\n  let packageJsonPath;\n  if (lockPath)\n    packageJsonPath = path.resolve(lockPath, \"../package.json\");\n  else\n    packageJsonPath = await findUp(\"package.json\", { cwd });\n  if (packageJsonPath && fs.existsSync(packageJsonPath)) {\n    try {\n      const pkg = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\n      if (typeof pkg.packageManager === \"string\") {\n        const [name, version] = pkg.packageManager.split(\"@\");\n        if (name === \"yarn\" && parseInt(version) > 1)\n          agent = \"yarn@berry\";\n        else if (name === \"pnpm\" && parseInt(version) < 7)\n          agent = \"pnpm@6\";\n        else if (name in AGENTS)\n          agent = name;\n        else\n          console.warn(\"[ni] Unknown packageManager:\", pkg.packageManager);\n      }\n    } catch {\n    }\n  }\n  if (!agent && lockPath)\n    agent = LOCKS[path.basename(lockPath)];\n  return agent;\n}\n\n// src/install.ts\nimport execa from \"execa\";\nasync function installPackage(names, options = {}) {\n  const detectedAgent = options.packageManager || await detectPackageManager(options.cwd) || \"npm\";\n  const [agent] = detectedAgent.split(\"@\");\n  if (!Array.isArray(names))\n    names = [names];\n  const args = options.additionalArgs || [];\n  if (options.preferOffline) {\n    if (detectedAgent === \"yarn@berry\")\n      args.unshift(\"--cached\");\n    else\n      args.unshift(\"--prefer-offline\");\n  }\n  return execa(\n    agent,\n    [\n      agent === \"yarn\" ? \"add\" : \"install\",\n      options.dev ? \"-D\" : \"\",\n      ...args,\n      ...names\n    ].filter(Boolean),\n    {\n      stdio: options.silent ? \"ignore\" : \"inherit\",\n      cwd: options.cwd\n    }\n  );\n}\nexport {\n  detectPackageManager,\n  installPackage\n};\n", "function clamp(n, min, max) {\n  return Math.min(max, Math.max(min, n));\n}\nfunction sum(...args) {\n  return flattenArrayable(args).reduce((a, b) => a + b, 0);\n}\n\nfunction toArray(array) {\n  array = array || [];\n  if (Array.isArray(array))\n    return array;\n  return [array];\n}\nfunction flattenArrayable(array) {\n  return toArray(array).flat(1);\n}\nfunction mergeArrayable(...args) {\n  return args.flatMap((i) => toArray(i));\n}\nfunction partition(array, ...filters) {\n  const result = new Array(filters.length + 1).fill(null).map(() => []);\n  array.forEach((e, idx, arr) => {\n    let i = 0;\n    for (const filter of filters) {\n      if (filter(e, idx, arr)) {\n        result[i].push(e);\n        return;\n      }\n      i += 1;\n    }\n    result[i].push(e);\n  });\n  return result;\n}\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction last(array) {\n  return at(array, -1);\n}\nfunction remove(array, value) {\n  if (!array)\n    return false;\n  const index = array.indexOf(value);\n  if (index >= 0) {\n    array.splice(index, 1);\n    return true;\n  }\n  return false;\n}\nfunction at(array, index) {\n  const len = array.length;\n  if (!len)\n    return void 0;\n  if (index < 0)\n    index += len;\n  return array[index];\n}\nfunction range(...args) {\n  let start, stop, step;\n  if (args.length === 1) {\n    start = 0;\n    step = 1;\n    [stop] = args;\n  } else {\n    [start, stop, step = 1] = args;\n  }\n  const arr = [];\n  let current = start;\n  while (current < stop) {\n    arr.push(current);\n    current += step || 1;\n  }\n  return arr;\n}\nfunction move(arr, from, to) {\n  arr.splice(to, 0, arr.splice(from, 1)[0]);\n  return arr;\n}\nfunction clampArrayRange(n, arr) {\n  return clamp(n, 0, arr.length - 1);\n}\nfunction sample(arr, count) {\n  return Array.from({ length: count }, (_) => arr[Math.round(Math.random() * (arr.length - 1))]);\n}\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nconst assert = (condition, message) => {\n  if (!condition)\n    throw new Error(message);\n};\nconst toString = (v) => Object.prototype.toString.call(v);\nconst noop = () => {\n};\n\nfunction notNullish(v) {\n  return v != null;\n}\nfunction noNull(v) {\n  return v !== null;\n}\nfunction notUndefined(v) {\n  return v !== void 0;\n}\nfunction isTruthy(v) {\n  return Boolean(v);\n}\n\nconst isDef = (val) => typeof val !== \"undefined\";\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isString = (val) => typeof val === \"string\";\nconst isObject = (val) => toString(val) === \"[object Object]\";\nconst isWindow = (val) => typeof window !== \"undefined\" && toString(val) === \"[object Window]\";\nconst isBrowser = typeof window !== \"undefined\";\n\nfunction slash(str) {\n  return str.replace(/\\\\/g, \"/\");\n}\nfunction ensurePrefix(prefix, str) {\n  if (!str.startsWith(prefix))\n    return prefix + str;\n  return str;\n}\nfunction ensureSuffix(suffix, str) {\n  if (!str.endsWith(suffix))\n    return str + suffix;\n  return str;\n}\nfunction template(str, ...args) {\n  return str.replace(/{(\\d+)}/g, (match, key) => {\n    const index = Number(key);\n    if (Number.isNaN(index))\n      return match;\n    return args[index];\n  });\n}\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nfunction randomStr(size = 16, dict = urlAlphabet) {\n  let id = \"\";\n  let i = size;\n  const len = dict.length;\n  while (i--)\n    id += dict[Math.random() * len | 0];\n  return id;\n}\n\nconst timestamp = () => +Date.now();\n\nfunction batchInvoke(functions) {\n  functions.forEach((fn) => fn && fn());\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction tap(value, callback) {\n  callback(value);\n  return value;\n}\n\nfunction objectMap(obj, fn) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => fn(k, v)).filter(notNullish));\n}\nfunction isKeyOf(obj, k) {\n  return k in obj;\n}\nfunction objectKeys(obj) {\n  return Object.keys(obj);\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\nfunction deepMerge(target, ...sources) {\n  if (!sources.length)\n    return target;\n  const source = sources.shift();\n  if (source === void 0)\n    return target;\n  if (isMergableObject(target) && isMergableObject(source)) {\n    objectKeys(source).forEach((key) => {\n      if (isMergableObject(source[key])) {\n        if (!target[key])\n          target[key] = {};\n        deepMerge(target[key], source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    });\n  }\n  return deepMerge(target, ...sources);\n}\nfunction isMergableObject(item) {\n  return isObject(item) && !Array.isArray(item);\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction clearUndefined(obj) {\n  Object.keys(obj).forEach((key) => obj[key] === void 0 ? delete obj[key] : {});\n  return obj;\n}\nfunction hasOwnProperty(obj, v) {\n  if (obj == null)\n    return false;\n  return Object.prototype.hasOwnProperty.call(obj, v);\n}\n\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction sleep(ms, callback) {\n  return new Promise((resolve) => setTimeout(async () => {\n    await (callback == null ? void 0 : callback());\n    resolve();\n  }, ms));\n}\nfunction createPromiseLock() {\n  const locks = [];\n  return {\n    async run(fn) {\n      const p = fn();\n      locks.push(p);\n      try {\n        return await p;\n      } finally {\n        remove(locks, p);\n      }\n    },\n    async wait() {\n      await Promise.allSettled(locks);\n    },\n    isWaiting() {\n      return Boolean(locks.length);\n    },\n    clear() {\n      locks.length = 0;\n    }\n  };\n}\nfunction createControlledPromise() {\n  let resolve, reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}\n\n/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {number}    delay -          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}   [noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset).\n * @param  {Function}  callback -       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {boolean}   [debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function}  A new, throttled, function.\n */\nfunction throttle (delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {number}   delay -         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}  [atBegin] -     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback -      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @returns {Function} A new, debounced function.\n */\n\nfunction debounce (delay, atBegin, callback) {\n  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n}\n\n/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nclass Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n\nfunction pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n\nconst VOID = Symbol(\"p-void\");\nclass PInstance extends Promise {\n  constructor(items = [], options) {\n    super(() => {\n    });\n    this.items = items;\n    this.options = options;\n    this.promises = /* @__PURE__ */ new Set();\n  }\n  get promise() {\n    var _a;\n    let batch;\n    const items = [...Array.from(this.items), ...Array.from(this.promises)];\n    if ((_a = this.options) == null ? void 0 : _a.concurrency) {\n      const limit = pLimit(this.options.concurrency);\n      batch = Promise.all(items.map((p2) => limit(() => p2)));\n    } else {\n      batch = Promise.all(items);\n    }\n    return batch.then((l) => l.filter((i) => i !== VOID));\n  }\n  add(...args) {\n    args.forEach((i) => {\n      this.promises.add(i);\n    });\n  }\n  map(fn) {\n    return new PInstance(Array.from(this.items).map(async (i, idx) => {\n      const v = await i;\n      if (v === VOID)\n        return VOID;\n      return fn(v, idx);\n    }), this.options);\n  }\n  filter(fn) {\n    return new PInstance(Array.from(this.items).map(async (i, idx) => {\n      const v = await i;\n      const r = await fn(v, idx);\n      if (!r)\n        return VOID;\n      return v;\n    }), this.options);\n  }\n  forEach(fn) {\n    return this.map(fn).then();\n  }\n  reduce(fn, initialValue) {\n    return this.promise.then((array) => array.reduce(fn, initialValue));\n  }\n  clear() {\n    this.promises.clear();\n  }\n  then(fn) {\n    const p2 = this.promise;\n    if (fn)\n      return p2.then(fn);\n    else\n      return p2;\n  }\n  catch(fn) {\n    return this.promise.catch(fn);\n  }\n  finally(fn) {\n    return this.promise.finally(fn);\n  }\n}\nfunction p(items, options) {\n  return new PInstance(items, options);\n}\n\nexport { assert, at, batchInvoke, clamp, clampArrayRange, clearUndefined, createControlledPromise, createPromiseLock, createSingletonPromise, debounce, deepMerge, ensurePrefix, ensureSuffix, flattenArrayable, hasOwnProperty, invoke, isBoolean, isBrowser, isDef, isFunction, isKeyOf, isNumber, isObject, isString, isTruthy, isWindow, last, mergeArrayable, move, noNull, noop, notNullish, notUndefined, objectEntries, objectKeys, objectMap, objectPick, p, partition, randomStr, range, remove, sample, shuffle, slash, sleep, sum, tap, template, throttle, timestamp, toArray, toString, uniq };\n", "import { installPackage } from '@antfu/install-pkg';\nimport { sleep } from '@antfu/utils';\nimport { cyan } from 'kolorist';\nimport { warnOnce } from './warn.mjs';\n\nlet pending;\nconst tasks = {};\nasync function tryInstallPkg(name) {\n  if (pending) {\n    await pending;\n  }\n  if (!tasks[name]) {\n    console.log(cyan(`Installing ${name}...`));\n    tasks[name] = pending = installPackage(name, {\n      dev: true,\n      preferOffline: true\n    }).then(() => sleep(300)).catch((e) => {\n      warnOnce(`Failed to install ${name}`);\n      console.error(e);\n    }).finally(() => {\n      pending = void 0;\n    });\n  }\n  return tasks[name];\n}\n\nexport { tryInstallPkg };\n", "import { yellow } from 'kolorist';\n\nconst warned = /* @__PURE__ */ new Set();\nfunction warnOnce(msg) {\n  if (!warned.has(msg)) {\n    warned.add(msg);\n    console.warn(yellow(`[@iconify-loader] ${msg}`));\n  }\n}\n\nexport { warnOnce };\n", "import { searchForIcon } from './modern.mjs';\nimport { loadCollectionFromFS } from './fs.mjs';\nimport { warnOnce } from './warn.mjs';\nimport { loadIcon } from './loader.mjs';\nimport '../svg/build.mjs';\nimport '../svg/size.mjs';\nimport '../icon-set/get-icon.mjs';\nimport '../icon/index.mjs';\nimport '../icon/merge.mjs';\nimport './utils.mjs';\nimport 'debug';\nimport '../customisations/index.mjs';\nimport 'fs';\nimport 'local-pkg';\nimport './install-pkg.mjs';\nimport '@antfu/install-pkg';\nimport '@antfu/utils';\nimport 'kolorist';\nimport './custom.mjs';\nimport '../svg/trim.mjs';\n\nconst loadNodeIcon = async (collection, icon, options) => {\n  let result = await loadIcon(collection, icon, options);\n  if (result) {\n    return result;\n  }\n  const iconSet = await loadCollectionFromFS(collection, options?.autoInstall);\n  if (iconSet) {\n    const ids = [\n      icon,\n      icon.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase(),\n      icon.replace(/([a-z])(\\d+)/g, \"$1-$2\")\n    ];\n    result = await searchForIcon(iconSet, collection, ids, options);\n  }\n  if (!result && options?.warn) {\n    warnOnce(`failed to load ${options.warn} icon`);\n  }\n  return result;\n};\n\nexport { loadNodeIcon };\n"],
  "mappings": "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",
  "names": ["import_fs", "import_path", "import_fs", "import_path", "import_fs", "import_url", "__publicField", "__privateGet", "__privateAdd", "__privateSet", "__privateWrapper", "import_fs", "import_path", "findUp", "path", "fs", "execa", "Node", "_head", "_tail", "_size", "Queue", "import_fs"]
}
