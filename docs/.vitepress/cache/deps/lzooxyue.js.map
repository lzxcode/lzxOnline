{
  "version": 3,
  "sources": ["../../../node_modules/lzooxyue/packages/components/autoScroll/src/hooks/scroll.ts", "../../../node_modules/lzooxyue/packages/components/autoScroll/src/autoScroll.tsx", "../../../node_modules/lzooxyue/packages/components/autoScroll/index.ts", "../../../node_modules/lzooxyue/packages/components/index.ts", "../../../node_modules/lzooxyue/packages/index.ts"],
  "sourcesContent": ["import { Ref } from \"vue\";\r\ntype Scroll = (\r\n  content: HTMLElement,\r\n  body: HTMLElement,\r\n  scrollItem: HTMLElement,\r\n  count: Ref,\r\n  scroolItemHeight: Ref,\r\n  speed: Ref\r\n) => void;\r\nconst autoScroll: Scroll = function (\r\n  content,\r\n  body,\r\n  scrollItem,\r\n  count,\r\n  scroolItemHeight,\r\n  speed\r\n) {\r\n  window.requestAnimationFrame(function scroll() {\r\n    if (!body.lastChild) throw new Error(\"没有滚动元素\");\r\n    if (\r\n      body.offsetHeight < content.offsetHeight ||\r\n      (body.lastChild as HTMLElement).offsetTop < content.offsetHeight\r\n    ) {\r\n      body.appendChild(scrollItem.cloneNode(true));\r\n    }\r\n    if (body.firstChild && Math.abs(body.offsetTop) >= scroolItemHeight.value) {\r\n      count.value = Math.abs(body.offsetTop) - scroolItemHeight.value;\r\n      body.removeChild(body.firstChild);\r\n    }\r\n    count.value = count.value - speed.value;\r\n    body.style.setProperty(\"margin-top\", `${count.value}px`);\r\n    window.requestAnimationFrame(scroll)\r\n  });\r\n};\r\n\r\nexport default {\r\n  autoScroll,\r\n};\r\n", "import { ref, onMounted, defineProps, defineComponent } from \"vue\";\r\nimport \"./style.scss\"\r\nimport scroll from \"./hooks/scroll\";\r\nconst autoScroll = defineComponent({\r\n  name: \"autoScroll\",\r\n  props: {\r\n    mode: {\r\n      type: String,\r\n      default: \"auto\",\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n  },\r\n  setup(props, { slots }) {\r\n    let { autoScroll } = scroll;\r\n    const count = ref(0);\r\n    const speed = ref(3);\r\n    let content: HTMLElement;\r\n    let body: HTMLElement;\r\n    let scrollItem: HTMLElement;\r\n    const scroolItemHeight = ref(0);\r\n    onMounted(() => {\r\n      content = document.getElementById(\"content\")!;\r\n      body = document.getElementById(\"body\")!;\r\n      scrollItem = document.getElementsByClassName(\"scrollItem\")[0] as HTMLElement;\r\n\r\n      // scroolItemHeight 记录高度 因为removeChild DOM之后 DOM依旧被引用会存在 但是高度缺变化为0了\r\n      console.log(props.mode, 123456);\r\n\r\n      scroolItemHeight.value = scrollItem.offsetHeight;\r\n      if (props.mode == \"auto\") {\r\n        autoScroll(content, body, scrollItem, count, scroolItemHeight, speed);\r\n      }\r\n    });\r\n\r\n    return () => (\r\n      <>\r\n        <div\r\n          id=\"content\"\r\n          class=\"content\"\r\n          style={{ height: `${props.height}px`, overflow: 'hidden' }}\r\n        >\r\n          <div id=\"body\" class=\"body\">\r\n            <div class=\"scrollItem\">\r\n              {slots.default?.()}\r\n            </div>\r\n          </div>\r\n        </div >\r\n      </>\r\n    )\r\n  }\r\n})\r\n\r\nexport default autoScroll\r\n\r\n", "import { App } from \"vue\";\r\nimport autoScroll from \"./src/autoScroll\";\r\nautoScroll.install = (app: App) => {\r\n  app.component(autoScroll.name, autoScroll);\r\n};\r\n\r\nexport default autoScroll;\r\n", "import { App } from 'vue'\r\nimport autoScroll from './autoScroll'\r\n\r\n\r\nconst components = [autoScroll]\r\n\r\nconst install = (app: App) => {\r\n  \r\n  components.map(item => {\r\n    \r\n    app.component(item.name, item)\r\n  })\r\n}\r\n\r\nexport default {\r\n  install,\r\n  ... components\r\n}", "import { App } from \"vue\";\r\n\r\nimport components from \"./components\";\r\n\r\nconst install = (app: App) => {\r\n  app.use(components);\r\n};\r\n\r\nexport default {\r\n  install\r\n};\r\n"],
  "mappings": ";;;;;;;;;AASA,IAAMA,IAAqB,SACzBC,GACAC,IACAC,GACAC,GACAC,IACAC,GACA;AACO,SAAA,sBAAsB,SAASC,IAAS;AAC7C,QAAI,CAACL,GAAK;AAAiB,YAAA,IAAI,MAAM,QAAQ;AAE3C,KAAAA,GAAK,eAAeD,EAAQ,gBAC3BC,GAAK,UAA0B,YAAYD,EAAQ,iBAEpDC,GAAK,YAAYC,EAAW,UAAU,IAAI,CAAC,GAEzCD,GAAK,cAAc,KAAK,IAAIA,GAAK,SAAS,KAAKG,GAAiB,UAClED,EAAM,QAAQ,KAAK,IAAIF,GAAK,SAAS,IAAIG,GAAiB,OACrDH,GAAA,YAAYA,GAAK,UAAU,IAE5BE,EAAA,QAAQA,EAAM,QAAQE,EAAM,OAClCJ,GAAK,MAAM,YAAY,cAAc,GAAGE,EAAM,SAAS,GACvD,OAAO,sBAAsBG,CAAM;EAAA,CACpC;AACH;AAxBA,IA0BeA,IAAA;EACb,YAAAP;AACF;;;ACjCA,IAAAQ,IAAAC,gBAAA;EACA,MAAA;EACA,OAAA;IACA,MAAA;MACA,MAAA;MACA,SAAA;IACA;IACA,QAAA;MACA,MAAA;MACA,SAAA;IACA;EACA;EACA,MAAAC,GAAA;IACA,OAAAC;EACA,GAAA;AACA,QAAA;MACA,YAAAH;IACA,IAAAI;AACA,UAAAC,IAAAC,IAAA,CAAA,GACAC,IAAAD,IAAA,CAAA;AACA,QAAAE,GACAC,GACAC;AACA,UAAAC,KAAAL,IAAA,CAAA;AACA,WAAAM,UAAA,MAAA;AACAJ,UAAA,SAAA,eAAA,SAAA,GACAC,IAAA,SAAA,eAAA,MAAA,GACAC,IAAA,SAAA,uBAAA,YAAA,EAAA,CAAA,GAGA,QAAA,IAAAR,EAAA,MAAA,MAAA,GACAS,GAAA,QAAAD,EAAA,cACAR,EAAA,QAAA,UACAF,GAAAQ,GAAAC,GAAAC,GAAAL,GAAAM,IAAAJ,CAAA;IAEA,CAAA,GACA,MAAA;;AAAAM,aAAAA,YAAAC,UAAA,MAAA,CAAAD,YAAA,OAAA;QACA,IAAA;QACA,OAAA;QACA,OAAA;UACA,QAAA,GAAAX,EAAA;UACA,UAAA;QACA;MACA,GAAA,CAAAW,YAAA,OAAA;QACA,IAAA;QACA,OAAA;MACA,GAAA,CAAAA,YAAA,OAAA;QACA,OAAA;MACA,GAAA,EAAAE,KAAAZ,GAAA,YAAA,OAAA,SAAAY,GAAA,KAAAZ,EAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IAAA;EACA;AACA,CAAA;;;ACpDAa,EAAW,UAAU,CAACC,MAAa;AAC7BA,IAAA,UAAUD,EAAW,MAAMA,CAAU;AAC3C;;;ACAA,IAAME,IAAa,CAACC,CAAU;AAA9B,IAEMC,IAAU,CAACC,MAAa;AAE5BH,IAAW,IAAI,CAAQI,OAAA;AAEjBD,MAAA,UAAUC,GAAK,MAAMA,EAAI;EAAA,CAC9B;AACH;AARA,IAUeC,IAAA;EACb,SAAAH;EACA,GAAIF;AACN;;;ACbA,IAAMM,KAAU,CAACC,OAAa;AAC5BA,EAAAA,GAAI,IAAIC,CAAU;AACpB;AAFA,IAIeC,IAAA;EACb,SAAAH;AACF;",
  "names": ["autoScroll", "content", "body", "scrollItem", "count", "scroolItemHeight", "speed", "scroll", "autoScroll", "defineComponent", "props", "slots", "scroll", "count", "ref", "speed", "content", "body", "scrollItem", "scroolItemHeight", "onMounted", "_createVNode", "_Fragment", "_a", "autoScroll", "app", "components", "autoScroll", "install", "app", "item", "components$1", "install", "app", "components", "index"]
}
